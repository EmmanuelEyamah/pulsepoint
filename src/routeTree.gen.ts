/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardPostRequestRouteImport } from './routes/dashboard/post-request'
import { Route as DashboardDonorsRouteImport } from './routes/dashboard/donors'
import { Route as DashboardActiveRequestsRouteImport } from './routes/dashboard/active-requests'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthOtpRouteImport } from './routes/auth/otp'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as HomeHomeRouteImport } from './routes/_home/home'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPostRequestRoute = DashboardPostRequestRouteImport.update({
  id: '/post-request',
  path: '/post-request',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDonorsRoute = DashboardDonorsRouteImport.update({
  id: '/donors',
  path: '/donors',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardActiveRequestsRoute = DashboardActiveRequestsRouteImport.update({
  id: '/active-requests',
  path: '/active-requests',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthOtpRoute = AuthOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const HomeHomeRoute = HomeHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => HomeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/home': typeof HomeHomeRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/otp': typeof AuthOtpRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/active-requests': typeof DashboardActiveRequestsRoute
  '/dashboard/donors': typeof DashboardDonorsRoute
  '/dashboard/post-request': typeof DashboardPostRequestRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/home': typeof HomeHomeRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/otp': typeof AuthOtpRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/active-requests': typeof DashboardActiveRequestsRoute
  '/dashboard/donors': typeof DashboardDonorsRoute
  '/dashboard/post-request': typeof DashboardPostRequestRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home': typeof HomeRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/_home/home': typeof HomeHomeRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/otp': typeof AuthOtpRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/active-requests': typeof DashboardActiveRequestsRoute
  '/dashboard/donors': typeof DashboardDonorsRoute
  '/dashboard/post-request': typeof DashboardPostRequestRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/dashboard'
    | '/home'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/dashboard/active-requests'
    | '/dashboard/donors'
    | '/dashboard/post-request'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/home'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/dashboard/active-requests'
    | '/dashboard/donors'
    | '/dashboard/post-request'
    | '/dashboard'
  id:
    | '__root__'
    | '/_home'
    | '/auth'
    | '/dashboard'
    | '/_home/home'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/dashboard/active-requests'
    | '/dashboard/donors'
    | '/dashboard/post-request'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeRoute: typeof HomeRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/post-request': {
      id: '/dashboard/post-request'
      path: '/post-request'
      fullPath: '/dashboard/post-request'
      preLoaderRoute: typeof DashboardPostRequestRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/donors': {
      id: '/dashboard/donors'
      path: '/donors'
      fullPath: '/dashboard/donors'
      preLoaderRoute: typeof DashboardDonorsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/active-requests': {
      id: '/dashboard/active-requests'
      path: '/active-requests'
      fullPath: '/dashboard/active-requests'
      preLoaderRoute: typeof DashboardActiveRequestsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/otp': {
      id: '/auth/otp'
      path: '/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_home/home': {
      id: '/_home/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}

interface HomeRouteChildren {
  HomeHomeRoute: typeof HomeHomeRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeRoute: HomeHomeRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOtpRoute: typeof AuthOtpRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthOtpRoute: AuthOtpRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardActiveRequestsRoute: typeof DashboardActiveRequestsRoute
  DashboardDonorsRoute: typeof DashboardDonorsRoute
  DashboardPostRequestRoute: typeof DashboardPostRequestRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardActiveRequestsRoute: DashboardActiveRequestsRoute,
  DashboardDonorsRoute: DashboardDonorsRoute,
  DashboardPostRequestRoute: DashboardPostRequestRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  HomeRoute: HomeRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
